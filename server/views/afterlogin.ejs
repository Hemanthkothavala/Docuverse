<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Docuverse Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        ::-webkit-scrollbar {
            width: 6px;
        }

        ::-webkit-scrollbar-thumb {
            background-color: #8b5cf6;
            border-radius: 10px;
        }

        .nav-link {
            transition: all 0.3s ease;
        }


        .nav-link.active {
            background-color: #e9d5ff;
            box-shadow: inset 2px 2px 6px #c084fc;
            color: #7e22ce;
            font-weight: bold;
            border-radius: 10px;
            transform: translateX(10px);
            font-size: 20px;
            transition: 0.3s ease;
        }


        body {
            overflow-x: hidden;
        }

        .slide-right {
            margin-left: 14rem;
            /* Same width as sidebar (56 = 14rem) */
        }
    </style>
</head>

<body class="font-sans bg-white text-gray-900 overflow-x-hidden">

    <!-- Sidebar -->
    <aside id="sidebar"
        class="fixed top-0 left-0 h-full w-56 bg-purple-100 z-40 overflow-y-auto transform -translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out">
        <div class="flex items-center justify-between h-20 px-6 bg-purple-300 border-b border-purple-300">
            <div class="flex items-center space-x-2">
                <div class="w-10 h-10 rounded-lg bg-purple-500 text-white flex items-center justify-center font-bold">D
                </div>
                <span class="text-lg font-semibold">Docuverse</span>
            </div>
            <button id="closeSidebarBtn"
                class="md:hidden text-purple-700 hover:text-purple-900 text-2xl font-bold">&times;</button>
        </div>

        <nav class="flex flex-col px-6 py-8 space-y-6">
            <a href="/afterlogin"
                class="nav-link flex items-center space-x-3 p-2 rounded hover:bg-purple-200 transition-colors">
                üè† <span>Home</span>
            </a>
            <a href="/files"
                class="nav-link flex items-center space-x-3 p-2 rounded hover:bg-purple-200 transition-colors">
                üìÑ <span class="font-semibold">Files</span>
            </a>
            <a href="/aichat"
                class="nav-link flex items-center space-x-3 p-2 rounded hover:bg-purple-200 transition-colors">
                ü§ñ <span class="font-semibold">Docu-AI</span>
            </a>
            <a href="/shared"
                class="nav-link flex items-center space-x-3 p-2 rounded hover:bg-purple-200 transition-colors">

                üîó <span class="font-semibold">Shared</span>
            </a>
        </nav>

        <form action="/logout" method="post" class="block md:hidden px-6 mt-4">
            <button type="submit"
                class="w-full bg-red-100 text-red-700 font-semibold px-4 py-2 rounded hover:bg-red-200 transition">
                Logout
            </button>
        </form>
    </aside>
    <!-- Main -->
    <main class="p-4 sm:p-8 w-full md:pl-56 transition-all duration-300">



        <!-- Top Bar -->
        <div class="max-w-6xl mx-auto mb-6">
            <div class="flex flex-col md:flex-row items-start md:items-center justify-between gap-4">
                <!-- Hamburger + Search -->
                <div class="flex items-center w-full gap-3">
                    <div class="md:hidden">
                        <button id="hamburgerBtn" class="bg-purple-600 text-white p-2 rounded shadow-md">
                            <svg class="w-6 h-6" fill="none" stroke="white" stroke-width="2" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        </button>
                    </div>
                    <form method="GET" action="/afterlogin" class="flex-grow">
                        <input type="search" id="searchInput" placeholder="Search for Anything!"
                            class="w-full border border-gray-300 rounded-xl py-3 px-5 text-gray-700 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-400 transition" />
                    </form>

                </div>

                <!-- Logout Button -->
                <!-- Logout for md and up -->
                <form action="/logout" method="post" class="hidden md:block">
                    <button type="submit"
                        class="bg-red-100 text-red-700 border border-red-300 px-4 py-2 rounded-lg font-bold hover:bg-red-200 transition">
                        Logout
                    </button>
                </form>

            </div>
        </div>


        <!-- Content Blocks -->
        <div class="max-w-6xl mx-auto grid sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-10">
            <!-- Upload Form -->
            <form action="/upload" method="POST" enctype="multipart/form-data" id="uploadForm" class="hidden">
                <input type="file" id="fileInput" name="files" accept=".pdf,.doc,.docx,.ppt,.pptx,image/*,video/*"
                    multiple hidden />
            </form>

            <!-- Upload Trigger Button -->
            <button type="button" id="uploadTrigger"
                class="border-2 border-dashed border-purple-600 rounded-xl py-6 text-lg font-semibold hover:bg-purple-100 transition">
                + Upload Files
            </button>

            <!-- AI Summarizer Button -->
            <form action="/summarize" method="POST">
                <button type="submit"
                    class="bg-purple-600 text-white font-bold rounded-xl py-11 px-6 w-full hover:bg-purple-700 transition">
                    üß† AI Summarizer
                </button>
            </form>

            <!-- Welcome Section -->
            <section class="bg-white border border-blue-200 rounded-xl p-6 shadow">
                <h2 class="text-xl font-bold text-gray-900 mb-1">Welcome,</h2>
                <p class="text-blue-700 text-lg font-semibold tracking-wide">
                    <%= name.toUpperCase() %>!
                </p>
            </section>

            <!-- AI Summary Output -->


            <!-- Important Dates Button -->
            <a href="/important-dates">
                <button
                    class="bg-purple-600 text-white font-bold rounded-xl py-11 hover:bg-purple-700 transition w-full h-full">
                    üìÖ Important Dates
                </button>
            </a>
            <% if (summary) { %>
                <div
                    class="bg-white border border-purple-300 rounded-xl p-4 shadow overflow-y-auto max-h-60 sm:col-span-2 lg:col-span-2">
                    <h3 class="text-xl font-bold text-purple-700 mb-2">üìÑ Summary</h3>
                    <div class="text-gray-800 whitespace-pre-line text-sm leading-relaxed">
                        <%= summary %>
                    </div>
                </div>
                <% } else if (error) { %>
                    <div
                        class="bg-white border border-red-300 rounded-xl p-4 shadow overflow-y-auto max-h-60 sm:col-span-2 lg:col-span-2">
                        <h3 class="text-xl font-bold text-red-700 mb-2">‚ö†Ô∏è Error</h3>
                        <div class="text-red-800 whitespace-pre-line text-sm leading-relaxed">
                            <%= error %>
                        </div>
                    </div>
                    <% } else { %>
                        <p
                            class="bg-white border border-purple-300 rounded-xl p-4 shadow overflow-y-auto max-h-60 sm:col-span-2 lg:col-span-2">
                            AI Summarised text will be displayed here
                        </p>
                        <% } %>


        </div>

        <!-- Files Table -->
        <div class="overflow-x-auto max-w-6xl mx-auto">
            <form method="POST" action="/delete-multiple" onsubmit="return confirm('Delete selected files?')">
                <table class="min-w-full border border-gray-300 text-sm">
                    <thead class="bg-purple-100">
                        <tr>
                            <th class="px-4 py-3 text-left"><input type="checkbox" id="selectAll" /></th>
                            <th class="px-4 py-3 text-left">File Name</th>
                            <th class="px-4 py-3 text-left">Type</th>
                            <th class="px-4 py-3 text-left">Modified</th>
                            <th class="px-4 py-3 text-left">Uploaded By</th>
                            <th class="px-4 py-3 text-left">Download</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% files.forEach(file=> {
                            const ext = file.originalname.split('.').pop().toLowerCase();
                            const badgeMap = {
                            pdf: 'bg-red-500', docx: 'bg-sky-600', doc: 'bg-sky-600',
                            ppt: 'bg-amber-500', pptx: 'bg-amber-500',
                            xls: 'bg-emerald-500', xlsx: 'bg-emerald-500',
                            jpg: 'bg-indigo-500', jpeg: 'bg-indigo-500', png: 'bg-indigo-500', gif: 'bg-indigo-500',
                            mp3: 'bg-teal-500', wav: 'bg-teal-500',
                            mp4: 'bg-rose-500', mkv: 'bg-rose-500',
                            zip: 'bg-violet-500', rar: 'bg-violet-500',
                            txt: 'bg-gray-500', csv: 'bg-green-500',
                            json: 'bg-purple-500', xml: 'bg-fuchsia-500',
                            };
                            const badgeClass = badgeMap[ext] || 'bg-gray-400';
                            %>
                            <tr class="border-t hover:bg-purple-50">
                                <td class="px-4 py-2"><input type="checkbox" name="fileIds" value="<%= file._id %>"
                                        class="fileCheckbox"></td>
                                <td class="px-4 py-2">
                                    <%= file.originalname %>
                                </td>
                                <td class="px-4 py-2"><span
                                        class="text-white px-3 py-1 rounded-full text-xs font-semibold <%= badgeClass %>">.
                                        <%= ext.toUpperCase() %>
                                    </span></td>
                                <td class="px-4 py-2">
                                    <%= file.uploadDate.toLocaleString() %>
                                </td>
                                <td class="px-4 py-2">
                                    <%= file.userName %>
                                </td>
                                <td class="px-4 py-2"><a href="/download/<%= file.filename %>"
                                        class="text-blue-600 hover:underline">Download</a></td>
                            </tr>
                            <% }) %>
                    </tbody>
                </table>

                <!-- Action Buttons -->
                <div id="actionButtonsWrapper" class="flex gap-4 justify-end mt-4 hidden">
                    <button type="submit"
                        class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition font-semibold">
                        Delete Selected
                    </button>
                    <button type="button" id="shareSelectedBtn"
                        class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition font-semibold">
                        Share Selected
                    </button>
                </div>
            </form>
        </div>

        <!-- Share Modal -->
        <div id="shareModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
            <div class="bg-white rounded-lg shadow-lg p-6 w-full max-w-md">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-semibold">Share Files</h2>
                    <button type="button" id="closeShareModal"
                        class="text-gray-500 hover:text-gray-700 text-2xl">&times;</button>
                </div>
                <form id="shareForm" method="POST" action="/share-multiple">
                    <input type="hidden" id="sharedFileIds" name="fileIds" />
                    <label for="recipientEmail" class="block mb-2 text-sm font-medium">Recipient Email</label>
                    <input type="email" name="recipientEmail" required placeholder="Enter recipient email"
                        class="w-full mb-4 px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-400" />
                    <div id="shareFilesList"
                        class="text-sm mb-4 max-h-40 overflow-y-auto border p-2 rounded bg-gray-50"></div>
                    <div class="flex justify-end gap-2">
                        <button type="button" id="cancelShare"
                            class="px-4 py-2 border rounded text-gray-600 hover:bg-gray-100">
                            Cancel
                        </button>
                        <button type="submit"
                            class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Send</button>
                    </div>
                </form>
            </div>
        </div>
    </main>

    <script>
        const searchInput = document.getElementById('searchInput');
        const filesTableBody = document.querySelector('tbody'); // your table body

        let debounceTimer;
        searchInput?.addEventListener('input', () => {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                const query = searchInput.value.trim();

                fetch(`/search?q=${encodeURIComponent(query)}`)
                    .then(res => res.json())
                    .then(data => {
                        // Clear old rows
                        filesTableBody.innerHTML = '';

                        if (data.length === 0) {
                            filesTableBody.innerHTML = '<tr><td colspan="6" class="px-4 py-2 text-center text-gray-500">No files found</td></tr>';
                            return;
                        }

                        // Insert filtered rows
                        data.forEach(file => {
                            const ext = file.originalname.split('.').pop().toLowerCase();
                            const badgeMap = {
                                pdf: 'bg-red-500', docx: 'bg-sky-600', doc: 'bg-sky-600',
                                ppt: 'bg-amber-500', pptx: 'bg-amber-500',
                                xls: 'bg-emerald-500', xlsx: 'bg-emerald-500',
                                jpg: 'bg-indigo-500', jpeg: 'bg-indigo-500', png: 'bg-indigo-500', gif: 'bg-indigo-500',
                                mp3: 'bg-teal-500', wav: 'bg-teal-500',
                                mp4: 'bg-rose-500', mkv: 'bg-rose-500',
                                zip: 'bg-violet-500', rar: 'bg-violet-500',
                                txt: 'bg-gray-500', csv: 'bg-green-500',
                                json: 'bg-purple-500', xml: 'bg-fuchsia-500',
                            };
                            const badgeClass = badgeMap[ext] || 'bg-gray-400';

                            filesTableBody.innerHTML += `
                            <tr class="border-t hover:bg-purple-50">
                                <td class="px-4 py-2"><input type="checkbox" name="fileIds" value="${file._id}" class="fileCheckbox"></td>
                                <td class="px-4 py-2">${file.originalname}</td>
                                <td class="px-4 py-2"><span class="text-white px-3 py-1 rounded-full text-xs font-semibold ${badgeClass}">.${ext.toUpperCase()}</span></td>
                                <td class="px-4 py-2">${new Date(file.uploadDate).toLocaleString()}</td>
                                <td class="px-4 py-2">${file.userName}</td>
                                <td class="px-4 py-2"><a href="/download/${file.filename}" class="text-blue-600 hover:underline">Download</a></td>
                            </tr>`;
                        });
                    });
            }, 1); // debounce
        });
        const sidebar = document.getElementById('sidebar');
        const hamburgerBtn = document.getElementById('hamburgerBtn');
        const closeSidebarBtn = document.getElementById('closeSidebarBtn');
        const mainContent = document.querySelector('main');


        // Toggle sidebar
        hamburgerBtn?.addEventListener('click', () => {
            sidebar.classList.remove('-translate-x-full');
            mainContent.classList.add('slide-right');
        });

        closeSidebarBtn?.addEventListener('click', () => {
            sidebar.classList.add('-translate-x-full');
            mainContent.classList.remove('slide-right');
        });


        // Highlight active nav link
        document.querySelectorAll('.nav-link').forEach(link => {
            if (link.href === location.href) link.classList.add('active');
        });

        // Handle file checkboxes
        const checkboxes = document.querySelectorAll('.fileCheckbox');
        const selectAll = document.getElementById('selectAll');
        const actionWrapper = document.getElementById('actionButtonsWrapper');
        const shareBtn = document.getElementById('shareSelectedBtn');

        const updateActions = () => {
            const anyChecked = [...checkboxes].some(cb => cb.checked);
            actionWrapper.style.display = anyChecked ? 'flex' : 'none';
            shareBtn.classList.toggle('hidden', !anyChecked);
        };

        checkboxes.forEach(cb => cb.addEventListener('change', updateActions));

        selectAll?.addEventListener('change', () => {
            checkboxes.forEach(cb => cb.checked = selectAll.checked);
            updateActions();
        });

        // File upload
        const uploadTrigger = document.getElementById('uploadTrigger');
        const fileInput = document.getElementById('fileInput');
        const uploadForm = document.getElementById('uploadForm');

        uploadTrigger?.addEventListener('click', () => fileInput.click());
        fileInput?.addEventListener('change', () => {
            if (fileInput.files.length > 0) uploadForm.submit();
        });

        // Share modal logic
        const shareModal = document.getElementById('shareModal');
        const closeShareModal = document.getElementById('closeShareModal');
        const cancelShare = document.getElementById('cancelShare');
        const shareForm = document.getElementById('shareForm');
        const sharedIdsInput = document.getElementById('sharedFileIds');
        const shareFilesList = document.getElementById('shareFilesList');

        shareBtn?.addEventListener('click', () => {
            const checked = [...document.querySelectorAll('.fileCheckbox:checked')];
            if (!checked.length) return alert('Please select files');
            const fileIds = checked.map(cb => cb.value);
            sharedIdsInput.value = fileIds.join(',');
            shareFilesList.innerHTML = checked.map(cb =>
                `<div>‚Ä¢ ${cb.closest('tr').children[1].textContent.trim()}</div>`).join('');
            shareModal.classList.remove('hidden');
        });

        [closeShareModal, cancelShare].forEach(btn =>
            btn?.addEventListener('click', () => {
                shareModal.classList.add('hidden');
                shareForm.reset();
            })
        );

        shareForm?.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(shareForm);
            const res = await fetch('/share-multiple', { method: 'POST', body: formData });
            const data = await res.json();
            if (data.ok) {
                alert('Files shared successfully üéâ');
                shareModal.classList.add('hidden');
                shareForm.reset();
            } else {
                alert(data.error || 'Sharing failed');
            }
        });
    </script>

</body>

</html>